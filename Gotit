describe('Download ATP - Filename Logic', () => {
  let trades, cumulative, preview, filenameReferenceNumber, timestamp;

  beforeEach(() => {
    filenameReferenceNumber = 'ABC123'; // Mock reference number
    timestamp = '20241118'; // Mock timestamp
  });

  it('should generate filename for Single FX to Multi ATPs', () => {
    trades = [{ id: 1 }];
    cumulative = { atps: [{}, {}] }; // Multiple ATPs
    let filename = '';

    if (trades.length === 1 && cumulative?.atps?.length > 1) {
      filename = `ATP-${filenameReferenceNumber}-1-${timestamp}`;
    }

    expect(filename).toBe(`ATP-ABC123-1-20241118`);
  });

  it('should generate filename for Single FX to Single ATP', () => {
    trades = [{ id: 1 }];
    cumulative = { atps: [{}] }; // Single ATP
    let filename = '';

    if (trades.length === 1 && cumulative?.atps?.length === 1) {
      filename = `ATP-${filenameReferenceNumber}-${timestamp}`;
    }

    expect(filename).toBe(`ATP-ABC123-20241118`);
  });

  it('should generate filename for Multi FX to Single ATP', () => {
    trades = [{ id: 1 }, { id: 2 }];
    cumulative = { atps: [{}] }; // Single ATP
    let filename = '';

    if (trades.length > 1 && cumulative?.atps?.length === 1) {
      filename = `ATP-MultiFX-${timestamp}`;
    }

    expect(filename).toBe(`ATP-MultiFX-20241118`);
  });

  it('should generate filename for preview data with multiple ATPs', () => {
    preview = { atpsCollective: [{}, {}] }; // Multiple ATPs
    let filename = '';

    if (preview?.atpsCollective?.length > 1) {
      filename = `ATP-${filenameReferenceNumber}-1-${timestamp}`;
    }

    expect(filename).toBe(`ATP-ABC123-1-20241118`);
  });

  it('should generate filename for preview data with single ATP', () => {
    preview = { atpsCollective: [{}] }; // Single ATP
    let filename = '';

    if (preview?.atpsCollective?.length === 1) {
      filename = `ATP-${filenameReferenceNumber}-${timestamp}`;
    }

    expect(filename).toBe(`ATP-ABC123-20241118`);
  });
});
