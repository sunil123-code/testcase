export const handleDownloadATP = (configuration, trades, cumulative, preview, label, dispatch) => {
  if (!trades || trades.length === 0) {
    // eslint-disable-next-line no-console
    return;
  }

  const now = new Date();
  const timestamp =
    `${now.getFullYear()}${(`0${now.getMonth() + 1}`).slice(-2)}${(`0${now.getDate()}`).slice(-2)}${(`0${now.getHours()}`).slice(-2)}${(`0${now.getMinutes()}`).slice(-2)}`;

  const filenameReferenceNumber = preview?.atpTradeList?.[0].opicsId ?? trades?.[0]?.opicsId;

  const multiFxFileName = trades?.length > 1
    ? `ATP-MultiFX-${timestamp}`
    : `ATP-${trades[0].opicsId}-${timestamp}`;

  const filename = preview?.atpsCollective?.length > 1 ? `ATP-${filenameReferenceNumber}-1-${timestamp}` : multiFxFileName;

  let atpTradeList = [];
  let totalAtps = 0;
  let atp = {};

  if (cumulative?.atps?.[0]?.details?.companyName) {
    atpTradeList = trades;
  } else {
    atpTradeList = preview.tradesCollective;
  }

  if (cumulative?.atps?.[0]?.details?.companyName) {
    atp = cumulative.atps[0];
    totalAtps = cumulative.atps.length;
  } else {
    atp = typeof label === 'object' ? preview?.atpsCollective?.[0] : preview?.atpsCollective.filter(item => item.name === label)[0];
    totalAtps = preview?.atpsCollective?.length;
  }

  const atpData = {
    trades: atpTradeList.map(trade => ({ opicsId: trade.opicsId })),
    totalNoOfAtps: totalAtps,
    atps: [{
      atpId: cumulative?.atps?.[0]?.details?.companyName ? null : atp?.atpId,
      referenceDocId: atp?.referenceDocId || null,
      name: atp?.name || 'ATP 1',
      details: {
        ...atp?.details,
        contactInfo: atp?.details?.contactInfo
      },
      purpose: {
        ...atp?.purpose,
        principle: atp?.purpose?.principle
      },
      fxDisposition: {
        ...atp?.fxDisposition,
        eventualRemittance: atp?.fxDisposition?.eventualRemittance
      },
      intendedBeneficiary: atp?.intendedBeneficiary,
    }],
  };

  delete atpData.atps[0]?.details?.sumOfBuyAmounts;
  delete atpData.atps[0]?.supportingDocs;

  // Add null values for empty fields when data comes from cumulative
  if (cumulative?.atps?.[0]?.details?.companyName) {
    Object.keys(atpData.atps[0]).forEach(key => {
      if (atpData.atps[0][key] === '') {
        atpData.atps[0][key] = null;
      }
    });
  }

  const url = getURL(configuration, API_NAME.DOWNLOADATP, endpoints);

  dispatch(onDownloadeAtp(configuration, filename, atpData, url));
};
