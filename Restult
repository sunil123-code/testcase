

export const handleDownloadATP = (configuration, trades, cumulative, preview, label, dispatch) => {
  if (!trades || trades.length === 0) {
    return;
  }

  const now = new Date();
  const timestamp = `${now.getFullYear()}${(`0${now.getMonth() + 1}`).slice(-2)}${(`0${now.getDate()}`).slice(-2)}${(`0${now.getHours()}`).slice(-2)}${(`0${now.getMinutes()}`).slice(-2)}`;

  const filenameReferenceNumber = preview?.atpTradeList?.[0]?.opicsId ?? trades?.[0]?.opicsId;

  const multiFxFileName = trades?.length > 1 ? `ATP-MultiFX-${timestamp}` : `ATP-${trades[0].opicsId}-${timestamp}`;

  const filename = preview?.atpsCollective?.length > 1 ? `ATP-${filenameReferenceNumber}-1-${timestamp}` : multiFxFileName;

  let atpTradeList = [];
  let totalAtps = 0;
  let atp = {};

  if (cumulative?.atps?.[0]?.details?.companyName) {
    atpTradeList = trades;
  } else {
    atpTradeList = preview.tradesCollective;
  }

  if (cumulative?.atps?.[0]?.details?.companyName) {
    atp = cumulative.atps[0];
    totalAtps = cumulative.atps.length;
  } else {
    atp = typeof label === 'object' ? preview?.atpsCollective?.[0] : preview?.atpsCollective?.find(item => item.name === label);
    totalAtps = preview?.atpsCollective?.length;
  }

  const atpData = {
    trades: atpTradeList.map(trade => ({ opicsId: trade.opicsId })),
    totalNoOfAtps: totalAtps,
    atps: [{
      atpId: cumulative?.atps?.[0]?.details?.companyName ? null : atp?.atpId ?? null, // Use null if atpId is missing
      referenceDocId: atp?.referenceDocId ?? null, // Use null if referenceDocId is missing
      name: atp?.name ?? 'ATP 1', // Use 'ATP 1' if name is missing
      details: {
        ...atp?.details,
        contactInfo: atp?.details?.contactInfo ?? null, // Use null if contactInfo is missing
        companyName: atp?.details?.companyName ?? null // Use null if companyName is missing
      },
      purpose: {
        ...atp?.purpose,
        principle: atp?.purpose?.principle ?? null, // Use null if principle is missing
      },
      fxDisposition: {
        ...atp?.fxDisposition,
        eventualRemittance: atp?.fxDisposition?.eventualRemittance ?? null, // Use null if eventualRemittance is missing
      },
      intendedBeneficiary: atp?.intendedBeneficiary ?? null, // Use null if intendedBeneficiary is missing
    }],
  };

  delete atpData.atps[0]?.details?.sumOfBuyAmounts;
  delete atpData.atps[0]?.supportingDocs;

  const url = getURL(configuration, API_NAME.DOWNLOADATP, endpoints);

  dispatch(onDownloadeAtp(configuration, filename, atpData, url));
};
